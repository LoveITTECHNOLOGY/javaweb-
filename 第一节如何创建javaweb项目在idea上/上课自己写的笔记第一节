本次实训课，完成小米商城 使用idea开发web项目
之前学过Html,javase,javaee
使用jsp+servlet+tomcat+oracle数据库布署项目
使用idea创建web项目
软件架构:B/S和C/S
1 c/s:client/server基于客户端和服务器短的软件架构
凡是需要安装客户端的，一般属于c/s架构 比如LOL QQ
a 交互性强{功能多}
b 数据安全性高
c 需要对接多个外设的情况下使用方便
缺点:
a.需要安装客户端
b.客户端需要针对性的开发，维护费用高
2:B/S
b/s是浏览器和服务器 browser/server基于浏览器和服务器端的软件架构
只需要维护服务器端，浏览器几乎只是用来显示的所有的资源都是配置在服务器端
a.维护方便，开发简单
b 分布性强
缺点:
a.对服务器的性能要求比较高
b.数据安全问题





如果访问B/S架构的项目
需要将我们的WEB项目部署在WEB服务器中，WEB服务器将把我们的项目发布到互联网中
Tomcat apache....
Tomcat是开源免费的轻量级的WEB应用服务器
Tomcat中
Bin:主目录 用来启动Tomcat
Conf:配置文件所在文件夹:配置端口号 Connector 
Lib：需要配置使用的工具包所在的文件夹
Logs：所在日志
Temp:临时文件夹
Webapps:部署的项目的所在文件夹
work：运行后的java文件存放文件夹
其中的Root文件是默认打开的项目
如果发现端口号被占用
在cmd中 输入netstat -ano查询所有的端口号 记住其中的
jsp:java server pages是一种动态的网页开发技术，它是在htm页面中写JAVA代码，是以
<% %>来·写JAVA代码，jsp也是一个Servlet,只是用来做显示页面
jsp九大内置对象
out:用户客户端和浏览器输出数据
request:请求对象，封装了客户端和浏览器的各种信息
response:响应对象，封装了服务器端的各种信息
Exception:封装了jsp运行时的异常和错误
config:封装了配置信息
page:类似JAVA中的this，谁用就是谁，用的当前页面，类似于中文子的‘我’
session:会话对象，可以实现同以用户在不同请求之间的数据交互（例如用户登录的用户信息保存在
session中)
application:代指应用程序的上下文，应用程序级别的，生命周期时一次服务器的开启
pageContext:可以得到所有的jsp对像
四大作用域
1 page.只在一个页面中保存数据，跳转就失败
2 request 只在一次请求（跳转)中（跳转)生效,（存账户密码，一次登录) 
3 session 只在一次会话中，(浏览器关闭就结束) 存储登录后的信息
4 application 整个服务器中生效，重启服务器就失效 （存放浏览器的用户数量)




在web项目中添加两个文件夹中
classes:存放编译的java文件

将编译的文件夹中放进



